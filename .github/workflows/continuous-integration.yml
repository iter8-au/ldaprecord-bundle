# Compiled from the following:
# - https://github.com/doctrine/DoctrineMigrationsBundle/blob/b31e69f/.github/workflows/continuous-integration.yml
# - https://github.com/FriendsOfSymfony/FOSRestBundle/blob/780be7e/.github/workflows/continuous-integration.yml
# - https://github.com/schmittjoh/serializer/blob/955efed/.github/workflows/ci.yaml

name: "Continuous Integration"

on:
  push:
  pull_request:
  # Run the CI tasks weekly to catch any potential dependency regressions.
  schedule:
    - cron: '0 0 * * 1'

jobs:
  # configure Docker here with manual running of generate.sh
#  certs:
#    name: "Generate certificates"
#    runs-on: "ubuntu-latest"
##    timeout-minutes: 10
##
#    steps:
#      - name: "Checkout"
#        uses: "actions/checkout@v2"

#      - name: "Generate certificates"
#        run: |
#          openssl genrsa -out openldapCA.key 4096
#          openssl req -x509 -new -nodes -key openldapCA.key -sha256 -days 3650 -subj "/CN=localhostCA" -out openldapCA.crt
#          openssl genrsa -out openldap.key 2048
#          openssl req -new -sha256 -key openldap.key -subj "/CN=localhost" -out openldap.csr
#          openssl x509 -req -in openldap.csr -CA openldapCA.crt -CAkey openldapCA.key -CAcreateserial -out openldap.crt -sha256 -days 3650

  phpunit:
    name: "PHPUnit on PHP ${{ matrix.php-version }} with Symfony ${{ matrix.symfony-require }}"
    runs-on: "ubuntu-latest"
#    needs: certs

    strategy:
      fail-fast: true
      matrix:
        include:
          # Symfony 4.4.0 has a minimum requirement of PHP 7.1.3 but LdapRecord library
          # has a minimum PHP requirement of 7.2.
          - php-version: 7.2
            composer-flags: "--prefer-lowest --prefer-stable"
            symfony-require: "4.4.*"
          # Temp comment out during Docker testing
#          - php-version: 7.3
#            composer-flags: "--prefer-stable"
#            symfony-require: "4.4.*"
#          - php-version: 7.4
#            composer-flags: "--prefer-stable"
#            symfony-require: "4.4.*"
#          - php-version: 7.4
#            composer-flags: "--prefer-stable"
#            symfony-require: "5.0.*"
#          - php-version: 7.4
#            composer-flags: "--prefer-stable"
#            symfony-require: "5.1.*"
#          - php-version: 7.4
#            composer-flags: "--prefer-stable"
#            symfony-require: "5.2.*"
#          - php-version: 8.0
#            composer-flags: "--prefer-stable"
#            symfony-require: "5.2.*"
#          - php-version: 8.1
#            composer-flags: "--ignore-platform-reqs"
#            symfony-require: "5.2.*"

    services:
      ldap:
        image: bitnami/openldap:latest
        ports:
          - 1389:1389
          - 1636:1636
        env:
          LDAP_ADMIN_USERNAME: admin
          LDAP_ADMIN_PASSWORD: a_great_password
          LDAP_ROOT: dc=local,dc=com
          LDAP_PORT_NUMBER: 1636
          LDAP_USERS: a
          LDAP_PASSWORDS: a
          LDAP_ENABLE_TLS: yes
          LDAP_LDAPS_PORT_NUMBER: 1636
          LDAP_TLS_VERIFY_CLIENT: try
          LDAP_TLS_CERT_FILE: /opt/bitnami/openldap/certs/openldap.crt
          LDAP_TLS_KEY_FILE: /opt/bitnami/openldap/certs/openldap.key
          LDAP_TLS_CA_FILE: /opt/bitnami/openldap/certs/openldapCA.crt
        volumes:
          - ${{ github.workspace }}/Tests/certs:/opt/bitnami/openldap/certs

    steps:
      - name: "Test"
        run: sudo chown -R $USER:$USER ${{ github.workspace }}

      - name: "Checkout"
        uses: "actions/checkout@v2"

      - name: "Debug"
        run: |
          pwd
          ls -la
          ls -la Tests
          ls -la Tests/certs

#      - name: "Checkout"
#        uses: "actions/checkout@v2"

      - name: "Restart Docker"
        run: "docker-compose restart"

      - name: "Install PHP with PCOV"
        uses: "shivammathur/setup-php@v2"
        with:
          coverage: "pcov"
          extensions: "json,ldap"
          php-version: "${{ matrix.php-version }}"
          ini-values: "zend.assertions=1"

      - name: "Validate composer files"
        run: "composer validate --strict"

      - name: "Cache dependencies installed with composer"
        uses: "actions/cache@v2"
        with:
          path: "~/.composer/cache"
          key: php-${{ matrix.php-version }}-symfony-${{ matrix.symfony-require }}-composer-locked-${{ hashFiles('composer.lock') }}
          restore-keys: |
            php-${{ matrix.php-version }}-symfony-${{ matrix.symfony-require }}-composer-locked-
            php-${{ matrix.php-version }}-

      - name: "Install dependencies with composer"
        env:
          SYMFONY_REQUIRE: "${{ matrix.symfony-require }}"
        run: |
          composer global require --no-progress --no-scripts --no-plugins symfony/flex
          composer update --no-interaction --no-progress ${{ matrix.composer-flags }}

      - name: "Generate certificates"
        run: |
          composer generate-certs

      # TODO: Cache Docker layers
      # - https://github.com/docker/buildx/pull/535
      # - https://github.com/docker/build-push-action/blob/master/docs/advanced/cache.md#github-cache

#      - name: "Docker debug"
#        run: |
#          docker network ls
#
#      - name: "Setup Docker"
#        run: "docker-compose up -d"
#        # Temporary while testing Docker compose for tests
#        timeout-minutes: 5

      - name: "Run PHPUnit"
        run: "vendor/bin/phpunit"
#        env:
#          LDAP_HOST: "ldap"
